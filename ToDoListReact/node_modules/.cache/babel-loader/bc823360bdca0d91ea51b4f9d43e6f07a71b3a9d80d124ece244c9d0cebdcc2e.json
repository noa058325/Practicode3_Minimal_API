{"ast":null,"code":"import axios from 'axios';\n\n// הגדרת כתובת ה-API\nconst apiUrl = \"http://localhost:5179\"; // עדכני לפי כתובת ה-API שלך\naxios.defaults.baseURL = apiUrl;\n\n// הוספת Interceptor לתפיסת שגיאות\naxios.interceptors.response.use(response => response, error => {\n  console.error(\"API error:\", error.response ? error.response.data : error.message);\n  return Promise.reject(error);\n});\nconst TodoService = {\n  // שליפת כל המשימות\n  getTasks: async () => {\n    try {\n      const result = await axios.get(\"/items\");\n      return result.data;\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error.message);\n      throw error;\n    }\n  },\n  // הוספת משימה חדשה\n  addTask: async name => {\n    try {\n      const newItem = {\n        name: name,\n        isComplete: false\n      }; // יצירת אובייקט של המשימה החדשה\n      const result = await axios.post(\"/items\", newItem);\n      return result.data;\n    } catch (error) {\n      console.error(\"Error adding task:\", error.message);\n      throw error;\n    }\n  },\n  // עדכון משימה\n  setCompleted: async (id, isComplete) => {\n    try {\n      const updatedItem = {\n        isComplete\n      }; // עדכון רק את המידע הדרוש\n      const result = await axios.put(`/items/${id}`, updatedItem);\n      return result.data;\n    } catch (error) {\n      console.error(\"Error updating task:\", error.message);\n      throw error;\n    }\n  },\n  // מחיקת משימה\n  deleteTask: async id => {\n    try {\n      const result = await axios.delete(`/items/${id}`);\n      return result.status === 204; // בדיקה אם המחיקה הצליחה\n    } catch (error) {\n      console.error(\"Error deleting task:\", error.message);\n      throw error;\n    }\n  }\n};\nexport default TodoService;","map":{"version":3,"names":["axios","apiUrl","defaults","baseURL","interceptors","response","use","error","console","data","message","Promise","reject","TodoService","getTasks","result","get","addTask","name","newItem","isComplete","post","setCompleted","id","updatedItem","put","deleteTask","delete","status"],"sources":["C:/aתכנות/פרקטיקוד/PractiCode4-MiniApi/ToDoListReact/src/service.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// הגדרת כתובת ה-API\r\nconst apiUrl = \"http://localhost:5179\"; // עדכני לפי כתובת ה-API שלך\r\naxios.defaults.baseURL = apiUrl;\r\n\r\n// הוספת Interceptor לתפיסת שגיאות\r\naxios.interceptors.response.use(\r\n  (response) => response, \r\n  (error) => {\r\n    console.error(\"API error:\", error.response ? error.response.data : error.message);\r\n    return Promise.reject(error); \r\n  }\r\n);\r\n\r\nconst TodoService = {\r\n  // שליפת כל המשימות\r\n  getTasks: async () => {\r\n    try {\r\n      const result = await axios.get(\"/items\");\r\n      return result.data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // הוספת משימה חדשה\r\n  addTask: async (name) => {\r\n    try {\r\n      const newItem = { name: name, isComplete: false }; // יצירת אובייקט של המשימה החדשה\r\n      const result = await axios.post(\"/items\", newItem);\r\n      return result.data;\r\n    } catch (error) {\r\n      console.error(\"Error adding task:\", error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // עדכון משימה\r\n  setCompleted: async (id, isComplete) => {\r\n    try {\r\n      const updatedItem = { isComplete }; // עדכון רק את המידע הדרוש\r\n      const result = await axios.put(`/items/${id}`, updatedItem);\r\n      return result.data;\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error.message);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // מחיקת משימה\r\n  deleteTask: async (id) => {\r\n    try {\r\n      const result = await axios.delete(`/items/${id}`);\r\n      return result.status === 204; // בדיקה אם המחיקה הצליחה\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error.message);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default TodoService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,MAAM,GAAG,uBAAuB,CAAC,CAAC;AACxCD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAGF,MAAM;;AAE/B;AACAD,KAAK,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC5BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACTC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACF,QAAQ,GAAGE,KAAK,CAACF,QAAQ,CAACI,IAAI,GAAGF,KAAK,CAACG,OAAO,CAAC;EACjF,OAAOC,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,MAAMM,WAAW,GAAG;EAClB;EACAC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,QAAQ,CAAC;MACxC,OAAOD,MAAM,CAACN,IAAI;IACpB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACG,OAAO,CAAC;MACrD,MAAMH,KAAK;IACb;EACF,CAAC;EAED;EACAU,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvB,IAAI;MACF,MAAMC,OAAO,GAAG;QAAED,IAAI,EAAEA,IAAI;QAAEE,UAAU,EAAE;MAAM,CAAC,CAAC,CAAC;MACnD,MAAML,MAAM,GAAG,MAAMf,KAAK,CAACqB,IAAI,CAAC,QAAQ,EAAEF,OAAO,CAAC;MAClD,OAAOJ,MAAM,CAACN,IAAI;IACpB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACG,OAAO,CAAC;MAClD,MAAMH,KAAK;IACb;EACF,CAAC;EAED;EACAe,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEH,UAAU,KAAK;IACtC,IAAI;MACF,MAAMI,WAAW,GAAG;QAAEJ;MAAW,CAAC,CAAC,CAAC;MACpC,MAAML,MAAM,GAAG,MAAMf,KAAK,CAACyB,GAAG,CAAE,UAASF,EAAG,EAAC,EAAEC,WAAW,CAAC;MAC3D,OAAOT,MAAM,CAACN,IAAI;IACpB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACG,OAAO,CAAC;MACpD,MAAMH,KAAK;IACb;EACF,CAAC;EAED;EACAmB,UAAU,EAAE,MAAOH,EAAE,IAAK;IACxB,IAAI;MACF,MAAMR,MAAM,GAAG,MAAMf,KAAK,CAAC2B,MAAM,CAAE,UAASJ,EAAG,EAAC,CAAC;MACjD,OAAOR,MAAM,CAACa,MAAM,KAAK,GAAG,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACG,OAAO,CAAC;MACpD,MAAMH,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeM,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}